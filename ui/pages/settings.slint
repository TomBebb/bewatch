import { VerticalBox, GridBox, TabWidget, TextEdit, HorizontalBox, ComboBox, CheckBox } from "std-widgets.slint";
import { Settings } from "../settings.slint";

component FormItem inherits GridLayout {
    in property <string> label;
    spacing-horizontal: 20px;

    Text {
        colspan: 8;
        text: label;
        horizontal-alignment: right;
        vertical-alignment: center;
    }

    HorizontalLayout {
        colspan: 10;
        col: 8;
        @children
    }
}

component Form inherits VerticalBox {
    spacing: 5px;
    height: 90px;
}

export component SettingsPage inherits VerticalBox {
    TabWidget {
        Tab {
            title: "General";
            Form {
                FormItem {
                    label: "Demo 1";
                    TextEdit { }
                }

                FormItem {
                    label: "Demo 2";
                    TextEdit { }
                }
            }
        }

        Tab {
            title: "Playback";

            Form {
                FormItem {
                    label: "Auto-play next";
                    play_next := CheckBox {
                        checked: Settings.value.playback.autoPlayNext;
                        changed checked => {
                            Settings.value.playback.autoPlayNext = play_next.checked;
                            Settings.change(Settings.value);
                        }
                    }
                }

                FormItem {
                    label: "Default subtitle language";

                    ComboBox {
                        model: ["None", "English", "日本語 / Japanese"];
                        current-index: Settings.value.playback.subtitleIndex;
                    }
                }

                FormItem {
                    label: "Default audio language";

                    ComboBox {
                        model: ["English", "日本語 / Japanese"];
                        current-index: Settings.value.playback.audioIndex;
                    }
                }

                FormItem {
                    label: "Only show subtitles on audio mismatch";
                }
            }
        }

        Tab {
            title: "Appearance";
        }

        Tab {
            title: "Metadata";

            Form {
                FormItem {
                    label: "Demo";
                    TextEdit { }
                }
            }
        }
    }
}
